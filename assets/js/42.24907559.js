(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{420:function(e,t,n){"use strict";n.r(t);var a=n(25),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"待续"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#待续"}},[e._v("#")]),e._v(" 待续")]),e._v(" "),n("p",[e._v("https://juejin.cn/post/7017645909483716615?utm_source=gold_browser_extension")]),e._v(" "),n("p",[e._v("最新的 ECMAScript 标准定义了 8 种数据类型:")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("7 种原始类型，使用 typeof 运算符检查:")]),e._v(" "),n("ul",[n("li",[e._v("undefined："),n("code",[e._v('typeof instance === "undefined"')])]),e._v(" "),n("li",[e._v("Boolean："),n("code",[e._v('typeof instance === "boolean"')])]),e._v(" "),n("li",[e._v("Number："),n("code",[e._v('typeof instance === "number"')])]),e._v(" "),n("li",[e._v("String："),n("code",[e._v('typeof instance === "string"')])]),e._v(" "),n("li",[e._v("BigInt："),n("code",[e._v('typeof instance === "bigint"')])]),e._v(" "),n("li",[e._v("Symbol ："),n("code",[e._v('typeof instance === "symbol"')])]),e._v(" "),n("li",[e._v("null："),n("code",[e._v('typeof instance === "object"')]),e._v("。")])]),e._v(" "),n("p",[n("code",[e._v("null")]),e._v("使用 "),n("code",[e._v("typeof")]),e._v(" 也返回 "),n("code",[e._v("object，")]),e._v(" 其实，是一个意外。")]),e._v(" "),n("blockquote",[n("p",[n("code",[e._v("第一版的JavaScript是用32位比特来存储值的，且是通过值的低1位或3位来识别类型的（有点哈法曼编码的味道）。1：整型（int）000：引用类型（object）010：双精度浮点型（double）100：字符串（string）110：布尔型（boolean）另外还用两个特殊值：undefined，用整数−2^30（负2的30次方，不在整型的范围内）null，机器码空指针（C/C++ 宏定义），低三位也是000而在JS_TypeOfValue（也就是typeof的源代码）里，是没有先过滤null的，导致在判断obj阶段产生了误会。")])])])]),e._v(" "),n("li",[n("p",[e._v('Object：typeof instance === "object"。任何 constructed 对象实例的特殊非数据结构类型，也用做数据结构：new Object，new Array，new Map，new Set，new WeakMap，new WeakSet，new Date，和几乎所有通过 new keyword 创建的东西。')])])]),e._v(" "),n("p",[e._v('记住 typeof 操作符的唯一目的就是检查数据类型，如果我们希望检查任何从 Object 派生出来的结构类型，使用 typeof 是不起作用的，因为总是会得到 "object"。检查 Object 种类的合适方式是使用 instanceof 关键字。但即使这样也存在误差。')]),e._v(" "),n("h1",{attrs:{id:"_7-种原始类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-种原始类型"}},[e._v("#")]),e._v(" 7 种原始类型")]),e._v(" "),n("p",[e._v("原始类型的指的是: 值本身是无法被改变的。JavaScript 中字符串是不可变的（译注：如，JavaScript 中对字符串的操作一定返回了一个新字符串，原始字符串并没有被改变）。我们称这些类型的值为“原始值”。")]),e._v(" "),n("h2",{attrs:{id:"undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[e._v("#")]),e._v(" undefined")]),e._v(" "),n("p",[e._v("当使用 "),n("code",[e._v("var")]),e._v(" 声明了变量之后，而未赋值就去取这个变量名时，该变量名就为 "),n("code",[e._v("undefined")]),e._v("。")]),e._v(" "),n("p",[e._v("与 "),n("code",[e._v("undefined")]),e._v(" 相关的操作符")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("??")]),e._v(" 空值合并操作符是一个逻辑操作符，当左侧的操作数为 "),n("code",[e._v("null")]),e._v(" 或者 "),n("code",[e._v("undefined")]),e._v(" 时，返回其右侧操作数，否则返回左侧操作数。")])]),e._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[e._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" flag "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("undefined")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("??")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'sss'")]),e._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("flag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 打印出 sss")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[n("strong",[e._v("注意")])]),e._v(" "),n("p",[e._v("与 "),n("code",[e._v("||")]),e._v(" 进行区分。")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("||")]),e._v(" 逻辑或操作符会在左侧操作数为假值时返回右侧操作数。")])]),e._v(" "),n("p",[e._v("常见的假值有  "),n("code",[e._v("0")]),e._v(", "),n("code",[e._v("''")]),e._v(", "),n("code",[e._v("null")]),e._v(", "),n("code",[e._v("undefined")]),e._v(", "),n("code",[e._v("false")]),e._v(" 等。")]),e._v(" "),n("h2",{attrs:{id:"boolean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[e._v("#")]),e._v(" Boolean")]),e._v(" "),n("h2",{attrs:{id:"number"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[e._v("#")]),e._v(" Number")]),e._v(" "),n("p",[e._v("JS 数字的范围为 (（-(2^53 -1) 到 2^53 -1）).")]),e._v(" "),n("p",[e._v("和带一些符号的值: +Infinity，-Infinity 和 NaN.")]),e._v(" "),n("p",[e._v("要检查值是否大于或小于 +/-Infinity，你可以使用常量 Number.MAX_VALUE 和 Number.MIN_VALUE。\n要检查是否为 NaN，可以使用 "),n("code",[e._v("isNaN()")]),e._v(", 如果是 NaN 返回 true, 反之为 false.")]),e._v(" "),n("h2",{attrs:{id:"string"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[e._v("#")]),e._v(" String")]),e._v(" "),n("h2",{attrs:{id:"bigint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigint"}},[e._v("#")]),e._v(" BigInt")]),e._v(" "),n("p",[e._v("BigInt 类型是 JavaScript 中的一个基础的数值类型，可以用任意精度表示整数。使用 BigInt，您可以安全地存储和操作大整数，甚至可以超过数字的安全整数限制。BigInt 是通过在整数末尾附加 n 或调用构造函数来创建的。")]),e._v(" "),n("p",[e._v("通过使用常量 Number.MAX_SAFE_INTEGER，您可以获得可以用数字递增的最安全的值。通过引入 BigInt，您可以操作超过 Number.MAX_SAFE_INTEGER 的数字")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("console.log(Number.MAX_SAFE_INTEGER)\n9007199254740991\n\nconsole.log(2n ** 53n)\n9007199254740992n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("h2",{attrs:{id:"symbol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[e._v("#")]),e._v(" Symbol")]),e._v(" "),n("p",[e._v("符号(Symbols)是 ECMAScript 第 6 版新定义的。符号类型是唯一的并且是不可修改的, 并且也可以用来作为 Object 的 key 的值(如下).")]),e._v(" "),n("h2",{attrs:{id:"null"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[e._v("#")]),e._v(" null")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);